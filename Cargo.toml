# SPDX-FileCopyrightText: 2024 Nils Jochem
# SPDX-License-Identifier: MPL-2.0

[package]
name = "common"
version = "0.2.1"
edition = "2021"
authors = ["Nils Jochem"]
license = "MPL-2.0"
repository = "https://github.com/NilsJochem/rust-common"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
thiserror = "1.0"
log = "0.4"
tokio = { version = "1.29", features = ["full"], optional = true }
futures = { version = "0.3", optional = true }
itertools = "0.12"
async-trait = "0.1"
momo = "0.2"
clap = { version = "4.3", features = ["derive"], optional = true }
env_logger = { version = "0.10", optional = true }
text_io = { version = "0.1", optional = true }
inquire = { version = "0.6", optional = true }
derive_more = { version = "1.0.0", features = ["from"], optional = true }

[features]
default = ["boo", "io", "args", "fut_iter"]
boo = ["dep:derive_more"]
io = ["dep:tokio"]
args = ["dep:clap", "dep:text_io", "dep:inquire", "dep:env_logger"]
fut_iter = ["dep:futures"]

[lints]
# base
clippy.nursery = { level = "warn", priority = -1 }
clippy.pedantic = { level = "warn", priority = -1 }

clippy.empty_structs_with_brackets = "warn"
clippy.format_push_string = "warn"
clippy.if_then_some_else_none = "warn"
clippy.missing_assert_message = "warn"
clippy.multiple_inherent_impl = "warn"
clippy.non_ascii_literal = "warn"
clippy.self_named_module_files = "warn"
clippy.semicolon_inside_block = "warn"
clippy.separated_literal_suffix = "warn"
clippy.str_to_string = "warn"
clippy.string_to_string = "warn"
rust.unsafe_op_in_unsafe_fn = "warn"
rust.missing_docs = "warn"

clippy.cast_possible_truncation = "allow"
clippy.cast_precision_loss = "allow"
clippy.cast_lossless = "allow"
clippy.cast_sign_loss = "allow"
clippy.return_self_not_must_use = "allow"
clippy.single_match_else = "allow"
clippy.option_if_let_else = "allow"
clippy.must_use_candidate = "allow"
clippy.impl_trait_in_params = "allow"

# custom for this crate
clippy.too_many_lines = "allow"
